[tox]
envlist = {py27}-django{18}

[doc8]
max-line-length = 120

[pycodestyle]
exclude = .git,.tox,migrations
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
ignore = D101,D200,D203,D212
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = test_settings
addopts = --cov fonzie --cov-report term-missing --cov-report xml
norecursedirs = .* docs node_modules requirements

[testenv]
deps =
    django18: Django==1.8.18
    -e.[test]
commands =
    py.test {posargs}

[testenv:docs]
setenv =
    DJANGO_SETTINGS_MODULE = test_settings
    PYTHONPATH = {toxinidir}
whitelist_externals =
    make
    rm
deps =
    -e.[doc]
commands =
    doc8 --ignore-path docs/_build README.rst docs
    rm -f docs/fonzie.rst
    rm -f docs/modules.rst
    make -C docs clean
    make -C docs html
    python setup.py check --restructuredtext --strict

[testenv:quality]
whitelist_externals =
    make
    rm
    touch
deps =
    -e.[doc,quality,test]
commands =
    touch tests/__init__.py
    pylint fonzie tests test_utils
    pylint --py3k fonzie tests test_utils
    rm tests/__init__.py
    pycodestyle fonzie tests
    pydocstyle fonzie tests
    isort --check-only --recursive tests test_utils fonzie manage.py setup.py test_settings.py
    make selfcheck
    pyroma .
